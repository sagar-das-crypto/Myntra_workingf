# -*- coding: utf-8 -*-
"""filtering_myntra.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m8un_xRLnYhLDzkmd8g8kbiQXtj_5iNR
"""

import numpy as np
import pandas as pd

data=pd.read_csv("/content/cosmetics.csv")

#writing the categories down
categories=data["Label"].values
categories_unique=data["Label"].unique()

#writingg the brands down
brands=data["Brand"].values
brands_unique=data["Brand"].unique()

#columns of the parameters like combination, moist, dry etc
para_columns= data.columns[6:]

#column storing the composition
composition=data.Ingredients.values

#----------------------------------------------------------------------------------------------------------------------------------------

#cleaning the ingridients columns
import re
text=data.Ingredients.values
def text_cleaner(text):
  #ct = re.sub('[^a-zA-Z]', ' ', text)
  ct=text.lower()
  ct=ct.split(",")
  ct=sorted(set(ct))
  return ct

def cleaner():
  text=data.Ingredients.values
  clean_text=[]
  for i in text:
    clean_text.append(text_cleaner(i))
  text=clean_text
  return text
text=cleaner()

data=data.drop("Ingredients", axis=1)
data["Ingredients"]=text
data["Composition"]=composition
data

#now we create a function which will take as input certain parameters and filter out the goods based on category, price_low and price_high
def filter1(category="Moisturizer", price_low=0, price_high=max(data.Price)):
  return data[(data["Label"] == category)  &  (data["Price"]>=price_low ) & (data["Price"]<=price_high)].reset_index().drop("index", axis=1)

#---------------------------------------------------------------------------------------------------------------------------------------

#filter to choose from ingredients
def filter2(arr=["water"]):
  ind=[]
  for i in arr:
    for j in range(len(df["Label"].values)):
      if i in (df["Ingredients"].values)[j]:
        ind.append(j)
  ind=sorted(list(set(ind)))
  filtered_df = df.loc[ind]
  if "index" in filtered_df.columns:
    filtered_df=filtered_df.drop("index", axis=1)
  return filtered_df

#---------------------------------------------------------------------------------------------------------------------------------------

#filter to see from the skin type
def filter3(comb=0, dry=0, normal=0, oily=0, sensitive=0):
  comb_var=0
  dry_var=0
  norm_var=0
  oil_var=0
  sen_var=0
  if comb==1:
    comb_var=1
  if dry==1:
    dry_var=1
  if normal==1:
    norm_var=1
  if oily==1:
    oil_var=1
  if sensitive==1:
    sen_var=1
  return df[(df["Combination"]==comb_var)^(df["Dry"]==dry_var)^(df["Normal"]==norm_var)^(df["Oily"]==oil_var)^(df["Sensitive"]==sen_var)].reset_index().drop("index", axis=1).iloc[:,1:4]

df=filter1()
df=filter2()
df=filter3(1,0,0,0)
df

